"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const keymap_1 = require("./keymap");
test("simple data", () => {
    expect((0, keymap_1.parseInput)("foo")).toEqual([
        {
            inputType: keymap_1.InputType.Text,
            data: ["f", "o", "o"],
        },
    ]);
});
test("enter key", () => {
    expect((0, keymap_1.parseInput)("\r")).toEqual([
        {
            inputType: keymap_1.InputType.Enter,
            data: ["\r"],
        },
    ]);
});
test("data split by special", () => {
    expect((0, keymap_1.parseInput)("foo\rbar")).toEqual([
        {
            inputType: keymap_1.InputType.Text,
            data: ["f", "o", "o"],
        },
        {
            inputType: keymap_1.InputType.Enter,
            data: ["\r"],
        },
        {
            inputType: keymap_1.InputType.Text,
            data: ["b", "a", "r"],
        },
    ]);
});
test("ansi escape", () => {
    expect((0, keymap_1.parseInput)("\x1b[D")).toEqual([
        {
            inputType: keymap_1.InputType.ArrowLeft,
            data: ["\x1b", "[", "D"],
        },
    ]);
    expect((0, keymap_1.parseInput)("\x1b\r")).toEqual([
        {
            inputType: keymap_1.InputType.AltEnter,
            data: ["\x1b", "\r"],
        },
    ]);
    expect((0, keymap_1.parseInput)("\x1bZ")).toEqual([
        {
            inputType: keymap_1.InputType.UnsupportedEscape,
            data: ["\x1b", "Z"],
        },
    ]);
    expect((0, keymap_1.parseInput)("\x1b[Z")).toEqual([
        {
            inputType: keymap_1.InputType.UnsupportedEscape,
            data: ["\x1b", "[", "Z"],
        },
    ]);
    expect((0, keymap_1.parseInput)("\x1b[3~")).toEqual([
        {
            inputType: keymap_1.InputType.Delete,
            data: ["\x1b", "[", "3", "~"],
        },
    ]);
    expect((0, keymap_1.parseInput)("\x1b[1~")).toEqual([
        {
            inputType: keymap_1.InputType.UnsupportedEscape,
            data: ["\x1b", "[", "1", "~"],
        },
    ]);
    expect((0, keymap_1.parseInput)("\x1b[1d")).toEqual([]);
});
//# sourceMappingURL=keymap.test.js.map