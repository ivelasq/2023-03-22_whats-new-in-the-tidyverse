[
  {
    "objectID": "posts/stringr-new-str-funs/index.html",
    "href": "posts/stringr-new-str-funs/index.html",
    "title": "New str_* functions",
    "section": "",
    "text": "Install stringr 1.5.0 with:\nLoad the package with:"
  },
  {
    "objectID": "posts/stringr-new-str-funs/index.html#comparing-strings",
    "href": "posts/stringr-new-str-funs/index.html#comparing-strings",
    "title": "New str_* functions",
    "section": "Comparing strings",
    "text": "Comparing strings\n\nCompare two character vectors\n\nstr_equal(\"a\", \"A\")\n#> [1] FALSE\nstr_equal(\"a\", \"A\", ignore_case = TRUE)\n#> [1] TRUE"
  },
  {
    "objectID": "posts/tidyverse-2-0-0/index.html",
    "href": "posts/tidyverse-2-0-0/index.html",
    "title": "tidyverse 2.0.0",
    "section": "",
    "text": "Install the latest version of the tidyverse with:\nLoad the tidyverse with:\nDid you notice?"
  },
  {
    "objectID": "posts/tidyverse-2-0-0/index.html#welcome-to-the-core-tidyverse",
    "href": "posts/tidyverse-2-0-0/index.html#welcome-to-the-core-tidyverse",
    "title": "tidyverse 2.0.0",
    "section": "Welcome to the core tidyverse",
    "text": "Welcome to the core tidyverse\n\nlubridate!\n\n\n\n\n\n lubridate is now part of the core tidyverse! Loading the tidyverse automatically attaches lubridate, meaning that you do not have load it separately."
  },
  {
    "objectID": "posts/tidyverse-2-0-0/index.html#conflicted-package",
    "href": "posts/tidyverse-2-0-0/index.html#conflicted-package",
    "title": "tidyverse 2.0.0",
    "section": "conflicted package",
    "text": "conflicted package\nYou may have noticed this message:\nℹ Use the conflicted package to force all conflicts to become errors\ntidyverse 2.0.0 now advertises the conflicted package.\nPackages can have conflicts (i.e., contain functions of the same name). Normally, the package loaded last “wins” and masks (overrides) the other function, resulting in confusing errors.\n\nlibrary(dplyr)\nlibrary(MASS)\n\n\nAttaching package: 'MASS'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\nselect\n\nfunction (obj) \nUseMethod(\"select\")\n<bytecode: 0x7fe2bf726d48>\n<environment: namespace:MASS>\n\n\nWith conflicted, you get an explicit error:\n\nlibrary(conflicted)\nlibrary(dplyr)\nlibrary(MASS)\n\nselect\n\nError:\n! [conflicted] select found in 2 packages.\nEither pick the one you want with `::`:\n• MASS::select\n• dplyr::select\nOr declare a preference with `conflicts_prefer()`:\n• `conflicts_prefer(MASS::select)`\n• `conflicts_prefer(dplyr::select)`\n\n\nIt asks you to either identify the namespace for each call:\n\ndplyr::select\n\nOr, declare a preference with conflicts_prefer():\n\nconflicts_prefer(dplyr::filter)\n\nThat way you know there’s a problem and how to resolve it."
  },
  {
    "objectID": "posts/tidyverse-2-0-0/index.html#learn-more",
    "href": "posts/tidyverse-2-0-0/index.html#learn-more",
    "title": "tidyverse 2.0.0",
    "section": "Learn more",
    "text": "Learn more\n\ntidyverse blog: tidyverse 2.0.0\ntidyverse release notes"
  },
  {
    "objectID": "posts/ggplot2-errors/index.html",
    "href": "posts/ggplot2-errors/index.html",
    "title": "Error messages",
    "section": "",
    "text": "ggplot 3.4.0 has been released. Install it with:\ninstall.packages(\"ggplot2\")\n\n\n…with better wording + cli package’s rich text formatting!\n\nlibrary(ggplot2)\n\nggplot(mtcars) %>% \n  geom_point(aes(mpg, disp))\n\nError in `geom_point()`:\n! `mapping` must be created by `aes()`\nℹ Did you use `%>%` or `|>` instead of `+`?\n\n\nggplot2 error messages can be hard to diagonose because you get the error when you print the plot rather than when it happens in the code. This version tells you what the problem is, where it came from, and what to do about it.\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\nmtcars %>% \n  ggplot(aes(x = cyl, y = hp)) +\n  geom_bar()\n\nError in `geom_bar()`:\n! Problem while computing stat.\nℹ Error occurred in the 1st layer.\nCaused by error in `setup_params()`:\n! `stat_count()` must only have an x or y aesthetic."
  },
  {
    "objectID": "posts/ggplot2-errors/index.html#learn-more",
    "href": "posts/ggplot2-errors/index.html#learn-more",
    "title": "Error messages",
    "section": "Learn more",
    "text": "Learn more\n\ntidyverse blog: ggplot 3.4.0\ntidyverse release notes"
  },
  {
    "objectID": "posts/ggplot2-linewidth/index.html",
    "href": "posts/ggplot2-linewidth/index.html",
    "title": "linewidth",
    "section": "",
    "text": "ggplot 3.4.0 has been released. Install it with:\ninstall.packages(\"ggplot2\")\n\n\nlinewidth will take over sizing of the width of lines - something that was handled previously by size.\n\nBeforeAfter\n\n\n\nlibrary(ggplot2, lib.loc = new_lib)\n\nggplot(airquality) +\n  geom_line(aes(Day, Temp, size = Month, group = Month)) +\n  scale_size(range = c(0.5, 3))\n\n\n\n\n\n\n\nlibrary(ggplot2)\n\nggplot(airquality) + \n  geom_line(aes(Day, Temp, linewidth = Month, group = Month)) + \n  scale_linewidth(range = c(0.5, 3))\n\n\n\n\n\n\n\nYou will get a deprecation message if you try to use size when you should be using linewidth.\n\nggplot(airquality) + \n  geom_line(aes(Day, Temp, size = Month, group = Month)) + \n  scale_size(range = c(0.5, 3))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nWhen size is a valid aesthetic like geom_sf() or geom_pointrange(), you will not get a deprecation warning.\n\nggplot(airquality) +\n  geom_pointrange(aes(x = factor(Month), y = Temp), stat = \"summary\", size = 2)\n\nNo summary function supplied, defaulting to `mean_se()`\n\n\n\n\n\nOn the point of geom_sf(), the default line width is now 0.2 instead of 0.5:\n\nlibrary(sf)\nlibrary(patchwork)\ntn <- leaidr::lea_get(\"tn\")\n\nOGR data source with driver: ESRI Shapefile \nSource: \"/private/var/folders/pj/nmg9b8_93dq4kwt8nt2d4cj40000gn/T/RtmpmKZkFy/47\", layer: \"47\"\nwith 158 features\nIt has 18 fields\n\np1 <- tn %>% \n  sf::st_as_sf() %>% \n  ggplot() +\n  geom_sf(linewidth = 0.5) + \n  ggtitle(\"Old default\")\n\np2 <- tn %>% \n  sf::st_as_sf() %>% \n  ggplot() +\n  geom_sf(linewidth = 0.2) + \n  ggtitle(\"New default\")\n\np1/p2\n\n\n\n\nThe switch to linewidth goes beyond aesthetics and targets everything that used size to target line width."
  },
  {
    "objectID": "posts/ggplot2-linewidth/index.html#learn-more",
    "href": "posts/ggplot2-linewidth/index.html#learn-more",
    "title": "linewidth",
    "section": "Learn more",
    "text": "Learn more\n\ntidyverse blog: ggplot2 3.4.0\nggplot2 release notes"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "What's new in the tidyverse",
    "section": "",
    "text": "tidyverse_packages(include_self = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntidyverse 2.0.0\n\n\n\ntidyverse\n\n\n\ntidyverse 2.0.0 has been released!\n\n\n\n\n\n\nMar 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNew str_* functions\n\n\n\nstringr\n\n\n\nstringr has accumulated several new functions since its last release three years ago.\n\n\n\n\n\n\nDec 2, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nError messages\n\n\n\nggplot2\n\n\n\nggplot2 3.4.0 has improved error messages when running plots.\n\n\n\n\n\n\nNov 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlinewidth\n\n\n\nggplot2\n\n\n\nggplot2 3.4.0 introduces a new linewidth aesthetic.\n\n\n\n\n\n\nNov 4, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Install the newest versions of packages using pak:\n\npak::pak(c(\"tidyverse\", \"dplyr\", \"tidyr\", \"stringr\", \"purrr\", \"ggplot2\"))"
  },
  {
    "objectID": "posts/stringr-new-str-funs/index.html#new-str_-functions",
    "href": "posts/stringr-new-str-funs/index.html#new-str_-functions",
    "title": "New str_* functions",
    "section": "New str_* functions",
    "text": "New str_* functions\n\nstr_view()\nstr_equal()\nstr_rank()\nstr_unique()\nstr_split_1()\nstr_split_i()\nstr_escape()\n\n\nstr_view()\nstr_view() lets you clearly see a string with special characters:\n\nx <- \"a\\n'\\b\\n\\\"c\"\nx\n\n[1] \"a\\n'\\b\\n\\\"c\"\n\n\n\nBase Rstringr\n\n\nIn base R, you can use writeLines() to get a good look at the string:\n\nwriteLines(x)\n\na\n'\b\n\"c\n\n\n\n\nNow you can use str_view()!\n\nstr_view(x)\n\n[1] │ a\n    │ '\b\n    │ \"c\n\n\n\n\n\nstr_view() also highlights strings with special characters:\n\nWhite spaceTabs\n\n\n\nnbsp <- \"Hi\\u00A0you\"\nnbsp\n\n[1] \"Hi you\"\n\nnbsp == \"Hi you\"\n\n[1] FALSE\n\nstr_view(nbsp)\n\n[1] │ Hi{\\u00a0}you\n\n\n\n\n\ntab_space <- \"\\t\"\nstr_view(tab_space)\n\n[1] │ {\\t}\n\n\n\n\n\nFinally, str_view() makes matches stand out:\n\nstr_view(c(\"abc\", \"def\", \"fghi\"), \"[aeiou]\")\n\n[1] │ <a>bc\n[2] │ d<e>f\n[3] │ fgh<i>\n\nstr_view(c(\"abc\", \"def\", \"fghi\"), \".$\")\n\n[1] │ ab<c>\n[2] │ de<f>\n[3] │ fgh<i>\n\nstr_view(fruit, \"(.)\\\\1\")\n\n [1] │ a<pp>le\n [5] │ be<ll> pe<pp>er\n [6] │ bilbe<rr>y\n [7] │ blackbe<rr>y\n [8] │ blackcu<rr>ant\n [9] │ bl<oo>d orange\n[10] │ bluebe<rr>y\n[11] │ boysenbe<rr>y\n[16] │ che<rr>y\n[17] │ chili pe<pp>er\n[19] │ cloudbe<rr>y\n[21] │ cranbe<rr>y\n[23] │ cu<rr>ant\n[28] │ e<gg>plant\n[29] │ elderbe<rr>y\n[32] │ goji be<rr>y\n[33] │ g<oo>sebe<rr>y\n[38] │ hucklebe<rr>y\n[47] │ lych<ee>\n[50] │ mulbe<rr>y\n... and 9 more\n\n\n\n\nstr_equal()\nUse str_equal() to determine if two strings are equivalent:\n\nstr_equal(\"a\", \"A\")\n\n[1] FALSE\n\n\nYou have the option to ignore case:\n\nstr_equal(\"a\", \"A\", ignore_case = TRUE)\n\n[1] TRUE\n\n\n\na1 <- \"\\u00e1\"\na2 <- \"a\\u0301\"\nc(a1, a2)\n\n[1] \"á\" \"á\"\n\na1 == a2\n\n[1] FALSE\n\nstr_equal(a1, a2)\n\n[1] TRUE\n\n\n\n\nstr_rank()\n\nstr_rank(c(\"a\", \"c\", \"b\", \"b\"))\n\n[1] 1 4 2 2\n\nstr_order(c(\"a\", \"c\", \"b\", \"b\"))\n\n[1] 1 3 4 2\n\n\n\n\nstr_unique()\nstr_unique() returns unique values:\n\nstr_unique(c(\"a\", \"a\", \"A\"))\n\n[1] \"a\" \"A\"\n\n\nYou have the option to ignore case:\n\nstr_unique(c(\"a\", \"a\", \"A\"), ignore_case = TRUE)\n\n[1] \"a\"\n\n\n\n\nstr_split_1()\nstr_split_1() splits a single string. It returns a character vector, not a list:\n\nBefore 1.5.0After 1.5.0\n\n\n\nunlist(str_split(\"x-y-z\", \"-\"))\n\n[1] \"x\" \"y\" \"z\"\n\n\n\n\n\nstr_split_1(\"x-y-z\", \"-\")\n\n[1] \"x\" \"y\" \"z\"\n\n\n\n\n\nstr_split_1() errors if you try and give it multiple values:\n\n\nstr_split_i()\n\nx <- c(\"a-b-c\", \"d-e\", \"f-g-h-i\")\nstr_split_i(x, \"-\", 2)\n\n[1] \"b\" \"e\" \"g\"\n\nstr_split_i(x, \"-\", 4)\n\n[1] NA  NA  \"i\"\n\nstr_split_i(x, \"-\", -1)\n\n[1] \"c\" \"e\" \"i\"\n\n\nstr_like() works like str_detect() but uses SQL’s LIKE syntax:\n\nfruit <- c(\"apple\", \"banana\", \"pear\", \"pineapple\")\nfruit[str_like(fruit, \"%apple\")]\n\n[1] \"apple\"     \"pineapple\"\n\nfruit[str_like(fruit, \"p__r\")]\n\n[1] \"pear\""
  },
  {
    "objectID": "posts/stringr-new-str-funs/index.html#learn-more",
    "href": "posts/stringr-new-str-funs/index.html#learn-more",
    "title": "New str_* functions",
    "section": "Learn more",
    "text": "Learn more\n\nstringr release notes\nstringr 1.5.0 tidyverse blog post"
  }
]