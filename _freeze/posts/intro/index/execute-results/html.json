{
  "hash": "4b7b4cfc2f6e62ef54bf5cfd11289cf5",
  "result": {
    "markdown": "---\ntitle: \"Introduction\"\nsubtitle: \"Welcome to R-Ladies Rome!\"\ndate: 2023-03-22\nimage: \"intro.png\"\nimage-alt: \"A starry night full of tidyverse package hexes.\"\ndescription: \"Welcome to R-Ladies Rome!\"\n---\n\n\n## Hi, I'm Isabella!\n\nKeep in touch on [Twitter](https://twitter.com/ivelasq3) /[Mastodon](https://fosstodon.org/@ivelasq3) (@ivelasq3) or [LinkedIn](https://linkedin.com/in/ivelasq) (@ivelasq).\n\n## Stay in the loop\n\n-   [R for Data Science (2e)](https://r4ds.hadley.nz/)\n-   [tidyverse blog](https://www.tidyverse.org/blog/)\n-   posit::glimpse() [Twitter](https://twitter.com/rstudio_glimpse) and [Mastodon](https://fosstodon.org/@posit_glimpse)\n\n## About the tidyverse\n\n> The tidyverse is an opinionated collection of R packages designed for data science.\n\nSee all the packages in the tidyverse:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidyverse::tidyverse_packages(include_self = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"broom\"         \"conflicted\"    \"cli\"           \"dbplyr\"       \n [5] \"dplyr\"         \"dtplyr\"        \"forcats\"       \"ggplot2\"      \n [9] \"googledrive\"   \"googlesheets4\" \"haven\"         \"hms\"          \n[13] \"httr\"          \"jsonlite\"      \"lubridate\"     \"magrittr\"     \n[17] \"modelr\"        \"pillar\"        \"purrr\"         \"ragg\"         \n[21] \"readr\"         \"readxl\"        \"reprex\"        \"rlang\"        \n[25] \"rstudioapi\"    \"rvest\"         \"stringr\"       \"tibble\"       \n[29] \"tidyr\"         \"xml2\"          \"tidyverse\"    \n```\n:::\n:::\n\n\n### pak\n\nInstall the newest versions of packages using [pak](https://pak.r-lib.org/):\n\n\n::: {.cell}\n\n```{.r .cell-code}\npak::pak(c(\"tidyverse\", \"dplyr\", \"tidyr\", \"stringr\", \"purrr\", \"ggplot2\"))\n```\n:::\n\n\n### Lifecycle stages\n\nLearn about the [lifecycle stages](https://lifecycle.r-lib.org/articles/stages.html):\n\n![A diagram showing the transitions between the four main stages: experimental can become stable and stable can become deprecated or superseded.](lifecycle.svg)\nExample: [recode](https://dplyr.tidyverse.org/reference/recode.html)\n\n### A note on vctrs\n\nQuite a few functions have been rewritten to use [vctrs](https://vctrs.r-lib.org/)  package behind the scenes:\n\n* dplyr's `if_else()`, `first()`, `last()`, `nth()`, `coalesce()`, `between()`.\n\nThe tidyverse team uses vctrs to keep recycling rules and coercion rules in one place.\n\nThis doesn't impact data scientists too much but it means more consistency, better error messages, bug fixes, and higher quality code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nx <- c(1:10, NA)\nif_else(x %% 2 == 0, x, \"x\") \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `if_else()`:\n! Can't combine `true` <integer> and `false` <character>.\n```\n:::\n:::\n\n\n\n## Base R pipe\n\nYou will see a lot of references to the base R pipe:\n\n<center>\n\n<blockquote class=\"twitter-tweet\">\n\n<p lang=\"en\" dir=\"ltr\">\n\nThe 2nd edition of R4DS uses the base pipe so I've added a chapter that talks about how to use it, why I think you should use it, and how it differs to %\\>%: <a href=\"https://t.co/77zwPkg4cd\">https://t.co/77zwPkg4cd</a> <a href=\"https://twitter.com/hashtag/rstats?src=hash&amp;ref_src=twsrc%5Etfw\">#rstats</a>\n\n</p>\n\n--- Hadley Wickham (@hadleywickham) <a href=\"https://twitter.com/hadleywickham/status/1519313737773158401?ref_src=twsrc%5Etfw\">April 27, 2022</a>\n\n</blockquote>\n\n\n```{=html}\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n```\n\n</center>\n\n-   [Read my blog post on understanding the base pipe!](https://ivelasq.rbind.io/blog/understanding-the-r-pipe/)\n-   [See note in the second edition of R for Data Science on using `|>`.](https://r4ds.hadley.nz/data-transform.html#sec-the-pipe)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}